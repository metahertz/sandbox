# -*- mode: ruby -*-
# vi: set ft=ruby :

PROVISIONER_IP = "192.168.56.4"
MACHINE1_IP = "192.168.56.43"

Vagrant.configure("2") do |config|
  config.vm.provider :libvirt do |libvirt|
    libvirt.qemu_use_session = false
  end

  config.vm.define "provisioner" do |provisioner|
    provisioner.vm.box = "generic/ubuntu2004"
    provisioner.vm.synced_folder "../compose/", "/sandbox/compose/"
    provisioner.vm.network "private_network", ip: PROVISIONER_IP,
                                              libvirt__network_name: "tink_network",
                                              libvirt__host_ip: "192.168.56.1",
                                              libvirt__netmask: "255.255.255.0",
                                              libvirt__dhcp_enabled: false,
                                              auto_config: false

    provisioner.vm.provider "virtualbox" do |v, override|
      v.memory = 2048
      v.cpus = 2
      override.vm.synced_folder "../compose/", "/sandbox/compose/"
    end

    provisioner.vm.provider "libvirt" do |l, override|
      l.memory = 2048
      l.cpus = 2
      override.vm.synced_folder "../compose/", "/sandbox/compose/", type: "rsync"
    end

    provisioner.vm.provision :shell, path: "setup.sh", args: [PROVISIONER_IP, MACHINE1_IP]
  end

  config.vm.define :machine1, autostart: false do |machine1|
    machine1.ssh.insert_key = false
    machine1.vm.boot_timeout = 10
    machine1.vm.synced_folder ".", "/vagrant", disabled: true
    machine1.vm.network :private_network, ip: MACHINE1_IP,
                                          mac: "0800279EF53A",
                                          adapter: 1,
                                          libvirt__network_name: "tink_network",
                                          libvirt__dhcp_enabled: true,
                                          libvirt__forward_mode: "nat"

    machine1.vm.provider "libvirt" do |v|
      v.storage :file, :device => :cdrom, :path => 'fleetup.iso'
      v.storage :file, :size => "20G"
      v.memory = 4096
      v.cpus = 2
      v.boot "hd"
      v.boot "network"
      v.graphics_ip = "0.0.0.0"
      v.machine_arch = "x86_64"
    end

    machine1.vm.provider "virtualbox" do |v, override|
      override.vm.box = "jtyr/pxe"
      v.memory = 2048
      v.cpus = 2
      v.gui = true
      v.customize ["modifyvm", :id, "--nic1", "hostonly", "--nic2", "nat", "--boot1", "disk", "--boot2", "net"]
      v.customize ["setextradata", :id, "GUI/ScaleFactor", "3.0"]
      v.check_guest_additions = false
    end
  end
end
